/* Core CSS file - any changes here, will likely break Lecture Doc!  */

:root {
    /* 
        Use 1920 x 1080px for 16:9 or 1920 x 1200px for 16:10 
        Note: 
        - These values are only for informational purposes!
        - These value are acutally (re)set by the JavaScript
                 when the document is loaded!
    */
    --ld-slide-width: 1920px;
    --ld-slide-height: 1200px;
}

/* Some further normalization. */
* {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
}

body {
    background-color: rgb(25, 25, 30); /*for debugging purposes!*/
}

div {
    /* Foreground, Background */
    scrollbar-color: #999 #333;
}

::-webkit-scrollbar {
    width: 0;
    height: 0;
}

::-webkit-scrollbar-track {
    background: transparent;    
}

@media print {
    @page {
        size: landscape;
    }
}


/*  We need a fixed size for the main pane to make the content
    as a whole scalable using the scale property which is 
    updated on viewport changes using Javascript. 
    Conceptually, we would like to have some CSS like:
    
        scale: min(calc(100vh/1080),calc(100vw/1920)); 
    
    But such computations are (not yet?) supported.

    The actual (fixed) size, however, doesn't really matter,
    because the content is scaled anyway. Nevertheless, when 
    external content is embededd (in particular images) 
    it makes sense to have a size that resembles a "natural"
    screen resolution to avoid having the user to scale 
    everything up or down. Nevertheless, in the end  all 
    that matters is the ratio.
*/
.ld-slide {
    width: var(--ld-slide-width);
    height: var(--ld-slide-height);    
    overflow: hidden;
    display: none; /* we ignore the default slides */
}

#ld-main-pane {
    z-index: 1;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    -webkit-user-select: none;
    user-select: none;    
}

#ld-main-pane .ld-slide {
    position: absolute;    
}

#ld-light-table-pane {
    position: fixed;
    top: 5vh;
    left: 5vw;
    z-index: 100;
    height: 90vh;
    width: 90vw;
    opacity: 0;
    transition: opacity 500ms;   
    display: none;
}

#ld-light-table {
    height: 100%;
    width: 100%;
    overflow-y: scroll;
}

#ld-light-table .ld-slide {
    position: absolute;
}

#ld-light-table-header {
    position: sticky; 
    top: 0;  
    z-index: 101;
} 

#ld-light-table-slides {
    display:flex;
    flex-wrap: wrap;
    justify-content: space-evenly; 
    align-items: flex-start; 
    align-content: flex-start;
    overflow-y: scroll; 
}

.ld-light-table-slide-scaler {
    scale: 0.1;
    position:absolute;
}

.ld-light-table-slide-overlay {
    position: absolute; 
    top:0px; 
    left: 0px; 
    width: calc(var(--ld-slide-width) / 10);
    height: calc(var(--ld-slide-height) / 10);
}

.ld-light-table-slide-pane {
    position:relative; 
    flex-shrink: 0;
    width: calc(var(--ld-slide-width) / 10);; 
    height: calc(var(--ld-slide-height) / 10); 
    overflow: hidden;
}

#ld-jump-target-pane {
    position: fixed;
    z-index: 999;
    height: 100vh;        
    width: 100vw;
    display: none; /* and flex (!) */
    align-items: center;
    justify-content: center;
}

#ld-help-pane {
    position: fixed;
    z-index: 1000;
    height: 100vh;        
    width: 100vw;
    display: none; /* toggle to flex and opacity of ld-help to 1(!) */
    align-items: center;
    justify-content: center;    
}

#ld-help {
    min-width: 45vw;
    max-width: 75vw;
    max-height: 75vh;    
    padding: 1em;
    overflow-y: scroll;
    overflow-x: scroll;
     /*  We want to have a very subtle fade-in effect. 
        
        The value 500ms is also used in the JavaScript code 
        to toggle the display property between none and 
        block. This is necessary to make the link in the help
        ineffective, when the help is not shown!
    */    
    opacity: 0;    
    transition:opacity 500ms;
}

#ld-handout-pane {
    display : none;
    background-color: white;
    margin: auto;
    width: calc(var(--ld-slide-width) / 2);
    max-width: calc(var(--ld-slide-width) / 2);
}

#ld-handout-pane .ld-slide {
    position: absolute;
    top: 0px;
    left: 0px;
    display: block; /* to ensure that they are not "none" */
}

.ld-handout-slide-pane {
    width: calc(var(--ld-slide-width) / 2);
    max-width: calc(var(--ld-slide-width) / 2);
    height: calc(var(--ld-slide-height) / 2);    
    max-height: calc(var(--ld-slide-height) / 2);
}

@media print {
    .ld-handout-slide-pane {
        page-break-after: always;
    }   
}

@media screen {
    .ld-handout-slide-pane {
        height: calc(var(--ld-slide-height) / 2 + 2px);    
        max-height: calc(var(--ld-slide-height) / 2 + 2px);
        border-bottom: 2px solid gray;
    }
}

.ld-handout-scaler {
    scale: 0.5;
    position: absolute;
}

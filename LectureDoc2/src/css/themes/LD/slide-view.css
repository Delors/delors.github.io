/* LAYER: theme.ld.slide-view */

#ld-slides-pane {
    ld-slide {
        --ld-rel-max-supplemental-area-width: 85%;
        --ld-rel-max-supplemental-area-height: 85%;

        ld-scrollable {
            &::before {
                display: inline-block;
                float: right;
                position: sticky;
                top: 0;
                z-index: 1;
                content: "⇡\A⇣";
                white-space: pre;
                color: rgb(150 150 150 / 50%);
                text-shadow: 1px 1px 2px var(--white);
            }
        }

        /*  Styling of Supplemental Information
            -----------------------------------


            Aggregation of all supplemental information on a slide in one
            ld-supplementals element is done by Javascript.

            The aggregated supplemental information is then positioned on the
            right side of the slide and can be expanded when necessary.
        */
        ld-supplementals {
            display: block;
            max-width: var(--ld-rel-max-supplemental-area-width);
            max-height: var(--ld-rel-max-supplemental-area-height);
            margin: 0;
            border-radius: var(--s-border-radius) 0 0 var(--s-border-radius);
            padding: calc(var(--s-tb-padding) * 0.75)
                calc(var(--s-lr-padding) * 0.75);
            /*  The factor has to be larger than the factor used by translate
                (see below) to ensure that the content is never visible when
                the supplemental information is not expanded. */

            position: absolute;
            top: 0;
            right: 0;
            z-index: 1;

            overflow-y: scroll;

            --current-background-color: rgb(
                from var(--s-background-color) r g b / 66%
            );
            background-color: var(--current-background-color);
            backdrop-filter: blur(8px);

            transform: translateX(calc(100% - var(--s-lr-padding) * 0.5))
                translateY(calc(var(--ld-slide-height) * 0.5 - (100% * 0.5)));
            box-shadow: var(--trbl-shadow);
            transition: 0.75s;

            /*  We can't use the :hover pseudo class here, because we want to be
                able to apply the styling in the non-primary window. */
            &.hover\:ld-supplementals {
                transform: translateX(0%)
                    translateY(
                        calc(var(--ld-slide-height) * 0.5 - (100% * 0.5))
                    );
                transition: 0.75s;
                box-shadow: var(--trbl-shadow-dark);
            }

            .supplemental + .supplemental {
                margin-top: 0.5em;
                border-top: 1px dashed var(--dark-gray);
                padding-top: 0.5em;
            }
        }

        /*  Styling of Presenter Notes
            --------------------------

            In the document we only show a marker and only if we hover over it,
            the presenter notes are shown at the bottom.
        */
        ld-presenter-note-marker {
            > div {
                display: block;
                position: absolute;
                width: 1.5em;
                height: 1.5em;
                /*  We don't want to make the size of the marker dependent on the
                    current font-size that is "accidentally" in effect. */
                font-size: 24px;
                translate: 0 -1.33lh;

                font-weight: bolder;
                text-align: center;
                border-radius: 25%;
                background-color: rgb(180 180 250 / 50%);
                mix-blend-mode: multiply;
                color: black;
                text-shadow: 1px 1px 2px white;
            }
        }

        ld-presenter-notes {
            position: absolute;
            width: calc(100% - 10px);
            bottom: 5px;
            left: 5px;
            z-index: 1;
            overflow: hidden;
            border-radius: var(--medium-border-radius);

            > ld-presenter-note {
                display: none;
                padding: 0.25em 0.5em;
                font-size: 38px;
                --current-background-color: rgb(50 50 80 / 75%);
                background-color: var(--current-background-color);
                color: white;
                text-shadow: 1px 1px 2px black;

                &::before {
                    content: attr(data-presenter-note-id);
                    display: block;
                    width: 100%;
                    padding-bottom: 0.1em;
                    margin-bottom: 0.1em;
                    border-bottom: thin solid var(--dark-gray);

                    text-align: center;
                    font-size: smaller;
                }

                backdrop-filter: blur(4px);

                /* The custom class .hover is added/removed programmatically. */
                &.hover\:ld-presenter-note {
                    display: block;
                }
            }
        }

        /*  The DIV with the class ".ld-copy-to-clipboard-button" is added by
            programmatically by LectureDoc. */
        .ld-copy-to-clipboard-button {
            scale: 3;

            transform-origin: top right;
        }

        .admonition.warning > p:first-child.admonition-title {
            animation: dark-red-to-light-red-and-back 10s infinite;
        }
    }
}

@keyframes dark-red-to-light-red-and-back {
    0% {
        background-color: var(--dark-red);
    }

    50% {
        background-color: var(--light-red);
    }

    100% {
        background-color: var(--dark-red);
    }
}

/*
    "Styling" of Animations

    The following style can generally be composed with the previous styles which
    affect the layout of the slide.

    Recall that LectureDoc's mechanism to switch slides is to scale a slide
    to 0 and to scale the next slide to 1 (normally both happens instanteously).
    Hence, it is often necessary to "reset" the scale level to make animations
    work.

    Currently, we support these animations:
    transition-*
    - fade
    - scale
    - move-left
    - move-to-top
    - flip
*/

@keyframes scale-to-zero {
    100% {
        scale: 0;
    }
}

#ld-slides-pane .ld-current-slide.transition-move-left {
    animation: 3s slide-move-left-in;
}

#ld-slides-pane
    .ld-previous-slide:has(+ ld-slide.transition-move-left.ld-current-slide) {
    animation:
        3s slide-move-left-out,
        0s 3s scale-to-zero;
}

@keyframes slide-move-left-in {
    /* It works beautifully with 0.1% and awfully with 0%: */
    0.1% {
        translate: 100%;
        opacity: 0;
    }

    70% {
        opacity: 1;
    }

    100% {
        translate: 0%;
    }
}

@keyframes slide-move-left-out {
    0% {
        scale: 1;
        /* reset the scale level to make the slide visible (again) */
        translate: 0%;
    }

    30% {
        opacity: 1;
    }

    100% {
        opacity: 0;
        scale: 1;
        translate: -100%;
    }
}

#ld-slides-pane .ld-current-slide.transition-scale {
    animation: 3s slide-scale-in;
}

#ld-slides-pane
    .ld-previous-slide:has(+ ld-slide.transition-scale.ld-current-slide) {
    animation: 3s slide-scale-out;
}

@keyframes slide-scale-in {
    0.1% {
        opacity: 0;
        scale: 1.5;
    }

    100% {
        opacity: 1;
        scale: 1;
    }
}

@keyframes slide-scale-out {
    0% {
        scale: 1;
        /* reset the scale level to make the slide visible (again) */
        opacity: 1;
    }

    100% {
        opacity: 0;
        scale: 0.5;
    }
}

#ld-slides-pane {
    .ld-current-slide.transition-flip {
        perspective: 3000px;
        transform-style: preserve-3d;
        backface-visibility: hidden;

        animation: 3s flip-in;
    }

    .ld-previous-slide:has(+ ld-slide.ld-current-slide.transition-flip) {
        perspective: 3000px;
        transform-style: preserve-3d;
        backface-visibility: hidden;

        animation: 3s flip-out;
    }
}

@keyframes flip-in {
    0%,
    50% {
        transform: rotateY(90deg);
        scale: 1;
        opacity: 0.25;
    }

    100% {
        transform: rotateY(0deg);
        opacity: 1;
    }
}

@keyframes flip-out {
    0% {
        scale: 1;
    }

    0.1% {
        transform: rotateY(0deg);
        opacity: 1;
        scale: 1;
    }

    100% {
        transform: rotateY(-180deg);
        opacity: 0;
        scale: 1;
    }
}

#ld-slides-pane .ld-current-slide.transition-fade {
    animation: 2s slide-fade-in;
}

#ld-slides-pane
    .ld-previous-slide:has(+ ld-slide.transition-fade.ld-current-slide) {
    animation:
        2s slide-fade-out,
        0s 2s scale-to-zero;
}

@keyframes slide-fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes slide-fade-out {
    0% {
        opacity: 1;
        scale: 1;
        /* reset the scale level to make a fading effect possible */
    }

    100% {
        opacity: 0;
        scale: 1;
    }
}

#ld-slides-pane .ld-current-slide.transition-move-to-top {
    animation: 3s slide-move-old-to-top;
}

#ld-slides-pane
    .ld-previous-slide:has(+ ld-slide.transition-move-to-top.ld-current-slide) {
    animation:
        3s slide-move-bottom-to-center,
        0s 3s scale-to-zero;
}

@keyframes slide-move-old-to-top {
    0.1% {
        /* it works beautifully with 0.1% and awfully with 0%...*/
        translate: 0 100%;
        opacity: 0;
    }

    70% {
        opacity: 1;
    }

    100% {
        translate: 0 0%;
    }
}

@keyframes slide-move-bottom-to-center {
    0% {
        scale: 1;
        /* reset the scale level to make the slide visible (again) */
        translate: 0% 0;
    }

    30% {
        opacity: 1;
    }

    100% {
        opacity: 0;
        scale: 1;
        translate: 0 -100%;
    }
}

/*

    Styling of Cheat Sheets

*/

.cheat-sheet-8-columns {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: space-between;
    align-items: flex-start;
    gap: 6px;
    border-radius: 6px;
    padding: 3px;
    font-size: 16px;
    background-color: black;

    &ld-slide::before {
        /* to clear the default logo */
        display: none;
    }

    div.cheat-sheet-block,
    h1 {
        width: calc(var(--ld-slide-width) / 8 - 6px);
        padding: 4px;
        border-radius: 4px;
        overflow: hidden;
        background-color: white;

        &.title {
            /* We have a different font-size and hence have to update the width! */
            width: calc(var(--ld-slide-width) / 8 - 6px);
            margin: 0;
            padding: 4px;

            background-color: var(--dhbw-light-gray);
            color: var(--dhbw-red);
            font-size: 2em;
            text-shadow: 1px 1px 2px var(--dhbw-gray);
        }
    }

    div.cheat-sheet-block > .rubric:first-child {
        width: calc(100% + 10px);
        margin-bottom: 0;
        position: relative;
        top: -5px;
        left: -5px;
        color: whitesmoke;
        border-radius: 8px 8px 0 0;
        font-size: larger;
        padding: 0.3em 0 0.3em 0.25em;
        background-color: var(--dhbw-red);
    }

    div.cheat-sheet-block > .rubric:not(:first-child) {
        background-color: var(--dhbw-gray);
        position: relative;
        top: -5px;
        left: -5px;
        color: whitesmoke;
        width: calc(100% + 10px);
        padding: 0.15em 0 0.15em 0.25em;
        margin-bottom: 0;
    }

    p.rubric + p {
        margin-top: 0;
    }
}
